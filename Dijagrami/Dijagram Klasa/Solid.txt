Treba imati u vidu da autori dijagrama klasa, u vrijeme pisanja dijagrama klasa,
nisu bili upućeni u odlike dobrog dizajna klasa.

1.Princip pojedinačne odgovornosti 
	-U ovom odjeljku ćemo ignorisati getere i setere kao metode unutar klasa.
	 Princip pojedninačne odgovornosti nije ispoštovan do maksimuma. To se najviše primjeti kod 
	 klase "Administrator" gdje klasa obavlja mnoge poslove, te promjena u bilo kojoj klasi kojoj
	 klsa "Administrator" pristupa, dovodi i do promjene u klasi "Administrator". Ipak u apstraktnim
	 klasama i iz kojih se nasljeđuje, dobro se drže ovog principa jer sadrže samo atribute koje izvedene
	 klase moraju imati, na taj način su dovoljno generalne da se ne vidi potreba za njihovim izmjenama. 	 
	 
2.Otvoreno zatvoren princip 
	-Ovaj princip je generalno ispoštovan u dijagramu klasa. Većina klasa upravo onemogućava da promjena u drugoj klasi pravi promjenu u njoj samoj.
	 Dobra implementacija ovog principa vidi se kod klasa "Dobavljač"  i "PotrebniLijekovi" ili "PotrebniLijekovi" i "Lijekovi". Međutim postoji par mjesta na kojima ovaj princip nije ispoštovan.
	 Npr. klasa "Administrator" koja bi trebala predstavljati nekog "Super usera" problematična je u mnogim aspektima, s obzirom da ima interakciju sa kompletnim sistemom.
	 Metode ove klase bi trebale biti implementirane u samim klasama koje klasa "Administrator" mijenja. Osim toga generalno je princip ispoštovan.
	 
3. Liskov princip zamjene 
	-Liskov princip je u potpunosti ispunjen u dijagramu klasa za bolnicu. Primjetimo da su iz klase "Osoba" izvedene "Uposlenik" , "Dobavljač" , "Apotekar", "Administrator", "Pacijent".
	 "Dobavljač" i "Apotekar" nisu izvedeni iz klase "Uposlenik" jer nisu direktni uposlenici bolnice, već samo saradnici u radu bolnice. Za razliku od njih
	 klase "Menadžer"  , "Medicinska sestra", "Doktor", sve mogu biti zamjenjeni sa klasom "Uposlenik" čime je Liskov princip ispoštovan.
	 
4.Princip inverzije ovisnosti 
	-A. Više nego očito sve klase koje se nasljeđuju ne ovise od izvedenih klasa ni u kom pogledu. Praćenjem svih strelica možemo uočiti da im je konačni cilj apstraktna klasa, konkretno u slučaju klase "Osoba" je to klasa "Uposlenik"
	čime vidimo da princip inverzne ovisnosti nije narušen.
	-B. Moduli su neovisni od detalja sistema. Apstrakcijom klase "Uposlenik" smo riješili sve detalje koji bi se inače duplicirali u izvedenim klasama te su time moduli ostali neovisni od detalja i princip nije narušen.
	
5.Princip izoliranja interfejsa
	-I ovaj princip je ispoštovan. Prilikom dizajniranja klasa vodilo se računa da one funkcionalnosti koje su navedene u use case dijagramu 
	 budu i ispoštovane. Poštivanje ovog principa je najviše zavisilo od dobro dizajniranog use case dijagrama, sve metode su takve da ce ih korisnik 
	 upotrebljavati. Naravno, neke metode će biti češće korištene od drugih, ali uklanjanjem bilo koje metode čitav sistem gubi bitne funkcionalnosti.
